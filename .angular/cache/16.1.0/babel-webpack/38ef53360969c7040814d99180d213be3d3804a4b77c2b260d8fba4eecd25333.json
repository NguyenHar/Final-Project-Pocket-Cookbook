{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass KrogerService {\n  // kp:KrogerProduct = {} as KrogerProduct;\n  constructor(http) {\n    this.http = http;\n    this.url = \"https://localhost:7270/api/Kroger/\";\n    this.searchResults = [];\n    this.shoppingList = [];\n    this.productsToShop = [];\n  }\n  getKrogerProducts(query) {\n    return this.http.get(this.url + 'ProductSearch/' + query);\n  }\n  // getShoppingListKrogerItems(query:string):void{\n  //   this.getKrogerProducts(query).subscribe(\n  //     (result) => {\n  //       this.productsToShop.push(result.data);\n  //     }\n  //   )\n  // }\n  // Params: comma separated list of ingredients\n  // Calls the async function to search multiple ingredients\n  getMultipleProducts(list) {\n    return this.http.get(this.url + 'GetMultipleProducts?list=' + list);\n  }\n}\nKrogerService.ɵfac = function KrogerService_Factory(t) {\n  return new (t || KrogerService)(i0.ɵɵinject(i1.HttpClient));\n};\nKrogerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: KrogerService,\n  factory: KrogerService.ɵfac,\n  providedIn: 'root'\n});\nexport { KrogerService };","map":{"version":3,"names":["KrogerService","constructor","http","url","searchResults","shoppingList","productsToShop","getKrogerProducts","query","get","getMultipleProducts","list","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\harry\\Desktop\\Grand Circus\\Final Project - Pocket Cookbook\\Pocket_Cookbook_FrontEnd\\src\\app\\kroger.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Datum, KrogerProduct } from './kroger';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KrogerService {\r\n\r\n  url:string=\"https://localhost:7270/api/Kroger/\"\r\n  searchResults:KrogerProduct[] = [];\r\n  shoppingList:string[] = [];\r\n  productsToShop:Datum[][] = [];\r\n  // kp:KrogerProduct = {} as KrogerProduct;\r\n  \r\n  constructor(private http:HttpClient) { }\r\n\r\n\r\n  getKrogerProducts(query:string):Observable<KrogerProduct>{\r\n    return this.http.get<KrogerProduct>(this.url + 'ProductSearch/' + query)\r\n  }\r\n\r\n  // getShoppingListKrogerItems(query:string):void{\r\n  //   this.getKrogerProducts(query).subscribe(\r\n  //     (result) => {\r\n  //       this.productsToShop.push(result.data);\r\n  //     }\r\n  //   )\r\n    \r\n  // }\r\n\r\n\r\n  // Params: comma separated list of ingredients\r\n  // Calls the async function to search multiple ingredients\r\n  getMultipleProducts(list:string):Observable<KrogerProduct[]>{\r\n    return this.http.get<KrogerProduct[]>(this.url + 'GetMultipleProducts?list=' + list);\r\n  }\r\n}\r\n"],"mappings":";;AAKA,MAGaA,aAAa;EAMxB;EAEAC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,GAAG,GAAQ,oCAAoC;IAC/C,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,YAAY,GAAY,EAAE;IAC1B,KAAAC,cAAc,GAAa,EAAE;EAGU;EAGvCC,iBAAiBA,CAACC,KAAY;IAC5B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAgB,IAAI,CAACN,GAAG,GAAG,gBAAgB,GAAGK,KAAK,CAAC;EAC1E;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EAGA;EACA;EACAE,mBAAmBA,CAACC,IAAW;IAC7B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAkB,IAAI,CAACN,GAAG,GAAG,2BAA2B,GAAGQ,IAAI,CAAC;EACtF;;AA7BWX,aAAa,C;mBAAbA,aAAa,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbf,aAAa,C;SAAbA,aAAa;EAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;EAAAC,UAAA,EAFZ;AAAM;SAEPlB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}