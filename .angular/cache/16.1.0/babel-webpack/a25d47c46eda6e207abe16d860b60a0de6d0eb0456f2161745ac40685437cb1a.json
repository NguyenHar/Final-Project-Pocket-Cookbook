{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../meal.service\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@abacritt/angularx-social-login\";\nimport * as i5 from \"../user-favorites.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/flex-layout/flex\";\nfunction MealComponent_div_7_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(t_r5);\n  }\n}\nfunction MealComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Select a target ready time.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function MealComponent_div_7_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.mealSelectionData.time = $event);\n    })(\"change\", function MealComponent_div_7_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.getMealsByQuery());\n    });\n    i0.ɵɵtemplate(4, MealComponent_div_7_option_4_Template, 2, 1, \"option\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.mealSelectionData.time);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.timeOptions);\n  }\n}\nfunction MealComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Search the name of a meal or ingredient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function MealComponent_div_8_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.mealSelectionData.query = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function MealComponent_div_8_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.getMealsByQuery());\n    });\n    i0.ɵɵtext(5, \"Search\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.mealSelectionData.query);\n  }\n}\nfunction MealComponent_div_9_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r13);\n  }\n}\nfunction MealComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Select a cuisine to choose from\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function MealComponent_div_9_Template_select_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.mealSelectionData.query = $event);\n    })(\"change\", function MealComponent_div_9_Template_select_change_3_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.getMealsByCuisine());\n    });\n    i0.ɵɵtemplate(4, MealComponent_div_9_option_4_Template, 2, 1, \"option\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.mealSelectionData.query);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.cuisineOptions);\n  }\n}\nfunction MealComponent_div_12_span_12_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function MealComponent_div_12_span_12_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const r_r17 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.favoriteRecipe(r_r17));\n    });\n    i0.ɵɵtext(1, \" Save For Later \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MealComponent_div_12_span_12_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \"\\u2B50\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MealComponent_div_12_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtemplate(1, MealComponent_div_12_span_12_button_1_Template, 2, 0, \"button\", 20);\n    i0.ɵɵtemplate(2, MealComponent_div_12_span_12_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const r_r17 = i0.ɵɵnextContext().$implicit;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r19.checkFavorite(r_r17.primary_key_id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r19.checkFavorite(r_r17.primary_key_id));\n  }\n}\nfunction MealComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"mat-card\", 14);\n    i0.ɵɵelement(2, \"img\", 15);\n    i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-actions\")(9, \"span\", 16)(10, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function MealComponent_div_12_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const r_r17 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.selectRecipe(r_r17));\n    });\n    i0.ɵɵtext(11, \" View Recipe \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, MealComponent_div_12_span_12_Template, 3, 2, \"span\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const r_r17 = ctx.$implicit;\n    const i_r18 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", r_r17.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(r_r17.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Ready In: \", ctx_r3.mealSelectionData.recipes[i_r18].readyInMinutes, \" minutes\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.loggedIn);\n  }\n}\nclass MealComponent {\n  constructor(mealService, recipeService, router, authService, userService) {\n    this.mealService = mealService;\n    this.recipeService = recipeService;\n    this.router = router;\n    this.authService = authService;\n    this.userService = userService;\n    this.mealSelectionData = {\n      time: 30,\n      favoritedMeals: {}\n    };\n    this.user = {};\n    this.loggedIn = false;\n    this.timeOptions = [10, 15, 20, 25, 30, 35, 40, 45, 50];\n    this.cuisineOptions = [\"African\", \"Asian\", \"American\", \"British\", \"Cajun\", \"Caribbean\", \"Chinese\", \"Eastern European\", \"European\", \"French\", \"German\", \"Greek\", \"Indian\", \"Irish\", \"Italian\", \"Japanese\", \"Jewish\", \"Korean\", \"Latin American\", \"Mediterranean\", \"Mexican\", \"Middle Eastern\", \"Nordic\", \"Southern\", \"Spanish\", \"Thai\", \"Vietnamese\"];\n  }\n  // Updates the list when anything on the page changes\n  ngOnInit() {\n    this.userService.getUserFavorites(this.userService.user.id).subscribe(result => {\n      this.mealService.mealSelectionData.favoritedMeals = result;\n      this.mealSelectionData.favoritedMeals = result;\n    });\n    this.mealSelectionData = this.mealService.mealSelectionData;\n    this.user = this.userService.user;\n    this.loggedIn = this.userService.loggedIn;\n  }\n  getFavorites() {\n    this.userService.getUserFavorites(this.userService.user.id).subscribe(result => {\n      this.mealService.mealSelectionData.favoritedMeals = result;\n      this.mealSelectionData.favoritedMeals = result;\n    });\n  }\n  // Calls spoonacular API to return a list of meal results\n  // Uses user input as the query\n  getMealsByQuery() {\n    this.mealService.returnResultsByMeal(this.mealSelectionData.query, this.mealSelectionData.time).subscribe(result => {\n      this.mealService.mealSelectionData.resultsList = result;\n      this.mealSelectionData.resultsList = result;\n      let queryIds = [];\n      result.forEach(function (value) {\n        queryIds.push(value.id);\n      });\n      this.recipeService.getRecipeInfoBulk(queryIds).subscribe(result => {\n        this.mealService.mealSelectionData.recipes = result;\n        this.mealSelectionData.recipes = result;\n      });\n    });\n  }\n  // Calls spoonacular API to return a list of meal results\n  // Uses user input as the query\n  getMealsByCuisine() {\n    this.mealService.returnResultsByCuisine(this.mealSelectionData.query, this.mealSelectionData.time).subscribe(result => {\n      this.mealService.mealSelectionData.resultsList = result;\n      this.mealSelectionData.resultsList = result;\n      let queryIds = [];\n      result.forEach(function (value) {\n        queryIds.push(value.id);\n      });\n      this.recipeService.getRecipeInfoBulk(queryIds).subscribe(result => {\n        this.mealService.mealSelectionData.recipes = result;\n        this.mealSelectionData.recipes = result;\n      });\n    });\n  }\n  // Stores the selected meal result in meal.service.ts as selectedMeal\n  selectRecipe(r) {\n    this.mealService.mealSelectionData.selectedMeal = r;\n    this.router.navigate(['recipe']);\n  }\n  // Stores the selected meal result in meal.service.ts in favoritedMeals\n  favoriteRecipe(r) {\n    this.userService.addUserFavorite(this.user.id, r.primary_key_id).subscribe(() => {\n      this.mealService.mealSelectionData.favoritedMeals.push(r);\n      this.mealSelectionData.favoritedMeals.push(r);\n    });\n  }\n  // // Used to display the favorite button only if it's not already favorited\n  // checkFavorite(id:number):boolean{\n  //   for (let i=0; i<this.mealService.mealSelectionData.favoritedMeals.length; i++){\n  //     if (this.mealService.mealSelectionData.favoritedMeals[i].primary_key_id == id)\n  //       return true;\n  //   }\n  //   return false;\n  // }\n  // Used to display the favorite button only if it's not already favorited\n  checkFavorite(id) {\n    for (let i = 0; i < this.mealSelectionData.favoritedMeals.length; i++) {\n      if (this.mealSelectionData.favoritedMeals[i].primary_key_id == id) {\n        console.log(this.mealSelectionData.favoritedMeals[i].primary_key_id);\n        return true;\n      }\n    }\n    return false;\n  }\n}\nMealComponent.ɵfac = function MealComponent_Factory(t) {\n  return new (t || MealComponent)(i0.ɵɵdirectiveInject(i1.MealService), i0.ɵɵdirectiveInject(i2.RecipeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.SocialAuthService), i0.ɵɵdirectiveInject(i5.UserFavoritesService));\n};\nMealComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MealComponent,\n  selectors: [[\"app-meal\"]],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"radio-toolbar\"], [\"type\", \"radio\", \"id\", \"meal\", \"name\", \"meal\", \"value\", \"meal\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"meal\"], [\"type\", \"radio\", \"id\", \"cuisine\", \"name\", \"meal\", \"value\", \"cuisine\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"cuisine\"], [4, \"ngIf\"], [1, \"content\"], [\"fxLayout\", \"row wrap\", \"fxLayoutGap\", \"100px grid\"], [\"fxFlex\", \"25%\", \"fxFlex.xs\", \"100%\", \"fxFlex.sm\", \"33%\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"fxFlex\", \"25%\", \"fxFlex.xs\", \"100%\", \"fxFlex.sm\", \"33%\"], [1, \"mat-elevation-z4\", 2, \"background-color\", \"aliceblue\"], [\"mat-card-image\", \"\", 3, \"src\"], [2, \"margin\", \"auto\"], [\"mat-raised-button\", \"\", 1, \"buttons\", 2, \"background-color\", \"blue\", \"color\", \"white\", 3, \"click\"], [\"style\", \"margin-left:10px; margin-right:auto\", 4, \"ngIf\"], [2, \"margin-left\", \"10px\", \"margin-right\", \"auto\"], [\"mat-raised-button\", \"\", \"class\", \"buttons\", \"style\", \"background-color:green; color:white\", 3, \"click\", 4, \"ngIf\"], [\"style\", \"margin:0px\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 1, \"buttons\", 2, \"background-color\", \"green\", \"color\", \"white\", 3, \"click\"], [2, \"margin\", \"0px\"]],\n  template: function MealComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function MealComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.mealSelectionData.selectedSearch = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Search By Meal\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function MealComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.mealSelectionData.selectedSearch = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Search By Cuisine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, MealComponent_div_7_Template, 5, 2, \"div\", 5);\n      i0.ɵɵtemplate(8, MealComponent_div_8_Template, 6, 1, \"div\", 5);\n      i0.ɵɵtemplate(9, MealComponent_div_9_Template, 5, 2, \"div\", 5);\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"div\", 7);\n      i0.ɵɵtemplate(12, MealComponent_div_12_Template, 13, 4, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.mealSelectionData.selectedSearch);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.mealSelectionData.selectedSearch);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.mealSelectionData.selectedSearch != null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mealSelectionData.selectedSearch == \"meal\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.mealSelectionData.selectedSearch == \"cuisine\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.mealSelectionData.resultsList);\n    }\n  },\n  dependencies: [i6.NgForOf, i6.NgIf, i7.NgSelectOption, i7.ɵNgSelectMultipleOption, i7.DefaultValueAccessor, i7.SelectControlValueAccessor, i7.RadioControlValueAccessor, i7.NgControlStatus, i7.NgModel, i8.MatCard, i8.MatCardActions, i8.MatCardContent, i8.MatCardImage, i9.MatButton, i10.DefaultLayoutDirective, i10.DefaultLayoutGapDirective, i10.DefaultFlexDirective],\n  styles: [\".content[_ngcontent-%COMP%] {\\n  padding: 90px;\\n}\\n  \\n.content[_ngcontent-%COMP%]    > mat-card[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.layout-row[_ngcontent-%COMP%]{\\n  \\n  display: flex;\\n}\\n  \\n.flexible[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n}\\n\\n.mdc-card[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.mat-mdc-card[_ngcontent-%COMP%] {\\n  border-radius: var(--mdc-elevated-card-container-shape);\\n  background-color: var(--mdc-elevated-card-container-color);\\n  border-width: 0;\\n  border-style: solid;\\n  border-color: var(--mdc-elevated-card-container-color);\\n  box-shadow: var(--mdc-elevated-card-container-elevation);\\n  --mdc-elevated-card-container-shape: 30px;\\n  --mdc-outlined-card-container-shape: 4px;\\n  --mdc-outlined-card-outline-width: 1px;\\n}\\n\\n.buttons[_ngcontent-%COMP%] {\\n  border-radius: 15px;\\n}\\n\\n\\n\\n.radio-toolbar[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n  opacity: 0;\\n  position: fixed;\\n  width: 0;\\n}\\n\\n.radio-toolbar[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  background-color: #ddd;\\n  padding: 10px 20px;\\n  font-family: sans-serif, Arial;\\n  font-size: 16px;\\n  border: 2px solid #444;\\n  border-radius: 4px;\\n  width: 20%;\\n  text-align: center;\\n}\\n\\n.radio-toolbar[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%]:checked    + label[_ngcontent-%COMP%] {\\n  background-color:#bfb;\\n  border-color: #4c4;\\n}\\n\\n.radio-toolbar[_ngcontent-%COMP%]   input[type=\\\"radio\\\"][_ngcontent-%COMP%]:focus    + label[_ngcontent-%COMP%] {\\n  border: 2px dashed #444;\\n}\\n\\n.radio-toolbar[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:hover {\\n  background-color: #dfd;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbWVhbC9tZWFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7O0VBRUUsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsdURBQXVEO0VBQ3ZELDBEQUEwRDtFQUMxRCxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLHNEQUFzRDtFQUN0RCx3REFBd0Q7RUFDeEQseUNBQXlDO0VBQ3pDLHdDQUF3QztFQUN4QyxzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUEsdUJBQXVCO0FBQ3ZCO0VBQ0UsVUFBVTtFQUNWLGVBQWU7RUFDZixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQiw4QkFBOEI7RUFDOUIsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudCB7XHJcbiAgcGFkZGluZzogOTBweDtcclxufVxyXG4gIFxyXG4uY29udGVudCA+IG1hdC1jYXJkIHtcclxuICB3aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi5sYXlvdXQtcm93e1xyXG4gIFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuICBcclxuLmZsZXhpYmxlIHtcclxuICBmbGV4LWdyb3c6IDE7XHJcbn1cclxuXHJcbi5tZGMtY2FyZCB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LW1kYy1jYXJkIHtcclxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1tZGMtZWxldmF0ZWQtY2FyZC1jb250YWluZXItc2hhcGUpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1kYy1lbGV2YXRlZC1jYXJkLWNvbnRhaW5lci1jb2xvcik7XHJcbiAgYm9yZGVyLXdpZHRoOiAwO1xyXG4gIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1tZGMtZWxldmF0ZWQtY2FyZC1jb250YWluZXItY29sb3IpO1xyXG4gIGJveC1zaGFkb3c6IHZhcigtLW1kYy1lbGV2YXRlZC1jYXJkLWNvbnRhaW5lci1lbGV2YXRpb24pO1xyXG4gIC0tbWRjLWVsZXZhdGVkLWNhcmQtY29udGFpbmVyLXNoYXBlOiAzMHB4O1xyXG4gIC0tbWRjLW91dGxpbmVkLWNhcmQtY29udGFpbmVyLXNoYXBlOiA0cHg7XHJcbiAgLS1tZGMtb3V0bGluZWQtY2FyZC1vdXRsaW5lLXdpZHRoOiAxcHg7XHJcbn1cclxuXHJcbi5idXR0b25zIHtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG59XHJcblxyXG4vKiByYWRpbyBpbnRvIGJ1dHRvbnMgKi9cclxuLnJhZGlvLXRvb2xiYXIgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcclxuICBvcGFjaXR5OiAwO1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB3aWR0aDogMDtcclxufVxyXG5cclxuLnJhZGlvLXRvb2xiYXIgbGFiZWwge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkO1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZiwgQXJpYWw7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkICM0NDQ7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIHdpZHRoOiAyMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucmFkaW8tdG9vbGJhciBpbnB1dFt0eXBlPVwicmFkaW9cIl06Y2hlY2tlZCArIGxhYmVsIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiNiZmI7XHJcbiAgYm9yZGVyLWNvbG9yOiAjNGM0O1xyXG59XHJcblxyXG4ucmFkaW8tdG9vbGJhciBpbnB1dFt0eXBlPVwicmFkaW9cIl06Zm9jdXMgKyBsYWJlbCB7XHJcbiAgYm9yZGVyOiAycHggZGFzaGVkICM0NDQ7XHJcbn1cclxuXHJcbi5yYWRpby10b29sYmFyIGxhYmVsOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZkO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { MealComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","t_r5","ɵɵlistener","MealComponent_div_7_Template_select_ngModelChange_3_listener","$event","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","mealSelectionData","time","MealComponent_div_7_Template_select_change_3_listener","ctx_r8","getMealsByQuery","ɵɵtemplate","MealComponent_div_7_option_4_Template","ɵɵproperty","ctx_r0","timeOptions","MealComponent_div_8_Template_input_ngModelChange_3_listener","_r10","ctx_r9","query","MealComponent_div_8_Template_button_click_4_listener","ctx_r11","ctx_r1","c_r13","MealComponent_div_9_Template_select_ngModelChange_3_listener","_r15","ctx_r14","MealComponent_div_9_Template_select_change_3_listener","ctx_r16","getMealsByCuisine","MealComponent_div_9_option_4_Template","ctx_r2","cuisineOptions","MealComponent_div_12_span_12_button_1_Template_button_click_0_listener","_r24","r_r17","$implicit","ctx_r22","favoriteRecipe","MealComponent_div_12_span_12_button_1_Template","MealComponent_div_12_span_12_p_2_Template","ctx_r19","checkFavorite","primary_key_id","ɵɵelement","MealComponent_div_12_Template_button_click_10_listener","restoredCtx","_r27","ctx_r26","selectRecipe","MealComponent_div_12_span_12_Template","ɵɵpropertyInterpolate","image","ɵɵsanitizeUrl","title","ɵɵtextInterpolate1","ctx_r3","recipes","i_r18","readyInMinutes","loggedIn","MealComponent","constructor","mealService","recipeService","router","authService","userService","favoritedMeals","user","ngOnInit","getUserFavorites","id","subscribe","result","getFavorites","returnResultsByMeal","resultsList","queryIds","forEach","value","push","getRecipeInfoBulk","returnResultsByCuisine","r","selectedMeal","navigate","addUserFavorite","i","length","console","log","ɵɵdirectiveInject","i1","MealService","i2","RecipeService","i3","Router","i4","SocialAuthService","i5","UserFavoritesService","selectors","decls","vars","consts","template","MealComponent_Template","rf","ctx","MealComponent_Template_input_ngModelChange_1_listener","selectedSearch","MealComponent_Template_input_ngModelChange_4_listener","MealComponent_div_7_Template","MealComponent_div_8_Template","MealComponent_div_9_Template","MealComponent_div_12_Template"],"sources":["C:\\Users\\harry\\Desktop\\Grand Circus\\Final Project - Pocket Cookbook\\Pocket_Cookbook_FrontEnd\\src\\app\\meal\\meal.component.ts","C:\\Users\\harry\\Desktop\\Grand Circus\\Final Project - Pocket Cookbook\\Pocket_Cookbook_FrontEnd\\src\\app\\meal\\meal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { MealService } from '../meal.service';\r\nimport { Meal, MealSelection, Result } from '../meal';\r\nimport { Router } from '@angular/router';\r\nimport { RecipeService } from '../recipe.service';\r\nimport { Recipe } from '../recipe';\r\nimport { GoogleLoginProvider, SocialAuthService, SocialUser } from '@abacritt/angularx-social-login';\r\nimport { UserFavoritesService } from '../user-favorites.service';\r\n\r\n@Component({\r\n  selector: 'app-meal',\r\n  templateUrl: './meal.component.html',\r\n  styleUrls: ['./meal.component.css']\r\n})\r\nexport class MealComponent {\r\n  mealSelectionData:MealSelection = {time:30, favoritedMeals:{}} as MealSelection;\r\n  user: SocialUser = {} as SocialUser;\r\n  loggedIn:boolean = false;\r\n\r\n  timeOptions:number[] = [10, 15, 20, 25, 30, 35, 40, 45, 50];\r\n  cuisineOptions:string[] = [\"African\",\"Asian\",\"American\",\"British\",\"Cajun\",\"Caribbean\",\"Chinese\",\"Eastern European\",\r\n    \"European\",\"French\",\"German\",\"Greek\",\"Indian\",\"Irish\",\"Italian\",\"Japanese\",\"Jewish\",\"Korean\",\"Latin American\",\r\n    \"Mediterranean\",\"Mexican\",\"Middle Eastern\",\"Nordic\",\"Southern\",\"Spanish\",\"Thai\",\"Vietnamese\"];\r\n\r\n  constructor (private mealService:MealService, private recipeService:RecipeService, \r\n    private router:Router, private authService: SocialAuthService, private userService:UserFavoritesService) {\r\n      \r\n  }\r\n  // Updates the list when anything on the page changes\r\n  ngOnInit() {\r\n    this.userService.getUserFavorites(this.userService.user.id).subscribe(\r\n      (result) => {\r\n        this.mealService.mealSelectionData.favoritedMeals = result;\r\n        this.mealSelectionData.favoritedMeals = result;\r\n      }\r\n      );\r\n\r\n    this.mealSelectionData = this.mealService.mealSelectionData;\r\n    this.user = this.userService.user;\r\n    this.loggedIn = this.userService.loggedIn;\r\n  }\r\n\r\n  getFavorites():void{\r\n    this.userService.getUserFavorites(this.userService.user.id).subscribe(\r\n      (result) => {\r\n        this.mealService.mealSelectionData.favoritedMeals = result;\r\n        this.mealSelectionData.favoritedMeals = result;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // Calls spoonacular API to return a list of meal results\r\n  // Uses user input as the query\r\n  getMealsByQuery():void{\r\n    this.mealService.returnResultsByMeal(this.mealSelectionData.query, this.mealSelectionData.time).subscribe(\r\n      (result) => {\r\n        this.mealService.mealSelectionData.resultsList = result;\r\n        this.mealSelectionData.resultsList = result;\r\n\r\n        let queryIds : number[] = [];\r\n        result.forEach(function (value) {\r\n          queryIds.push(value.id);\r\n        });\r\n\r\n        this.recipeService.getRecipeInfoBulk(queryIds).subscribe(\r\n          (result) => {\r\n            this.mealService.mealSelectionData.recipes = result;\r\n            this.mealSelectionData.recipes = result;\r\n          }\r\n        )\r\n\r\n      }\r\n    )\r\n  }\r\n\r\n  // Calls spoonacular API to return a list of meal results\r\n  // Uses user input as the query\r\n  getMealsByCuisine():void{\r\n    this.mealService.returnResultsByCuisine(this.mealSelectionData.query, this.mealSelectionData.time).subscribe(\r\n      (result) => {\r\n        this.mealService.mealSelectionData.resultsList = result;\r\n        this.mealSelectionData.resultsList = result;\r\n\r\n        let queryIds : number[] = [];\r\n        result.forEach(function (value) {\r\n          queryIds.push(value.id);\r\n        });\r\n\r\n        this.recipeService.getRecipeInfoBulk(queryIds).subscribe(\r\n          (result) => {\r\n            this.mealService.mealSelectionData.recipes = result;\r\n            this.mealSelectionData.recipes = result;\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  \r\n\r\n  // Stores the selected meal result in meal.service.ts as selectedMeal\r\n  selectRecipe(r:Result):void{\r\n    this.mealService.mealSelectionData.selectedMeal = r;\r\n    this.router.navigate(['recipe']);\r\n  }\r\n\r\n  // Stores the selected meal result in meal.service.ts in favoritedMeals\r\n  favoriteRecipe(r:Result):void{\r\n    this.userService.addUserFavorite(this.user.id, r.primary_key_id).subscribe(\r\n      () => {\r\n        this.mealService.mealSelectionData.favoritedMeals.push(r);\r\n        this.mealSelectionData.favoritedMeals.push(r);\r\n      }\r\n      );\r\n  }\r\n\r\n  // // Used to display the favorite button only if it's not already favorited\r\n  // checkFavorite(id:number):boolean{\r\n  //   for (let i=0; i<this.mealService.mealSelectionData.favoritedMeals.length; i++){\r\n  //     if (this.mealService.mealSelectionData.favoritedMeals[i].primary_key_id == id)\r\n  //       return true;\r\n  //   }\r\n  //   return false;\r\n  // }\r\n\r\n\r\n  // Used to display the favorite button only if it's not already favorited\r\n  checkFavorite(id:number):boolean{\r\n    for (let i=0; i<this.mealSelectionData.favoritedMeals.length; i++){\r\n      if (this.mealSelectionData.favoritedMeals[i].primary_key_id == id)\r\n      {\r\n        console.log(this.mealSelectionData.favoritedMeals[i].primary_key_id);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<!-- Navigation menu -->\r\n<div class=\"radio-toolbar\">\r\n  <input type=\"radio\" id=\"meal\" name=\"meal\" value=\"meal\" [(ngModel)]=\"mealSelectionData.selectedSearch\">\r\n  <label for=\"meal\">Search By Meal</label>\r\n  <input type=\"radio\" id=\"cuisine\" name=\"meal\" value=\"cuisine\" [(ngModel)]=\"mealSelectionData.selectedSearch\">\r\n  <label for=\"cuisine\">Search By Cuisine</label>\r\n\r\n<!-- Selection radio buttons -->\r\n<div *ngIf=\"mealSelectionData.selectedSearch != null\">\r\n  <p>Select a target ready time.</p>\r\n  <select [(ngModel)]=\"mealSelectionData.time\" (change)=\"getMealsByQuery()\">\r\n    <option *ngFor=\"let t of timeOptions\">{{t}}</option>\r\n  </select>\r\n</div>\r\n\r\n<div *ngIf=\"mealSelectionData.selectedSearch == 'meal'\">\r\n  <p>Search the name of a meal or ingredient</p>\r\n  <input type=\"text\" [(ngModel)]=\"mealSelectionData.query\"/>\r\n  <button (click)=\"getMealsByQuery()\">Search</button>\r\n</div>\r\n\r\n<div *ngIf=\"mealSelectionData.selectedSearch == 'cuisine'\">\r\n  <p>Select a cuisine to choose from</p>\r\n  <select [(ngModel)]=\"mealSelectionData.query\" (change)=\"getMealsByCuisine()\">\r\n    <option *ngFor=\"let c of cuisineOptions\">{{c}}</option>\r\n  </select>\r\n</div>\r\n\r\n<!-- Display the result cards -->\r\n<div class=\"content\">\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"100px grid\">\r\n    <div\r\n      fxFlex=\"25%\"\r\n      fxFlex.xs=\"100%\"  \r\n      fxFlex.sm=\"33%\" *ngFor=\"let r of mealSelectionData.resultsList; let i = index\">\r\n          <mat-card class=\"mat-elevation-z4\" style=\"background-color: aliceblue;\">\r\n          <img mat-card-image src=\"{{r.image}}\"/>\r\n          <mat-card-content>\r\n          <p>{{r.title}}</p>\r\n        </mat-card-content>\r\n        <p>Ready In: {{mealSelectionData.recipes[i].readyInMinutes}} minutes</p>\r\n        <mat-card-actions>\r\n          <span style=\"margin:auto\">\r\n            <button mat-raised-button (click)=\"selectRecipe(r)\"\r\n            class=\"buttons\" style= \"background-color:blue; color:white\"> View Recipe </button>\r\n          </span>\r\n\r\n\r\n          <span style=\"margin-left:10px; margin-right:auto\" *ngIf=\"loggedIn\">\r\n            <button mat-raised-button (click)=\"favoriteRecipe(r)\" *ngIf=\"!checkFavorite(r.primary_key_id)\"\r\n            class=\"buttons\" style= \"background-color:green; color:white\"> Save For Later </button>\r\n            <p *ngIf=\"checkFavorite(r.primary_key_id)\" style=\"margin:0px\">⭐</p>\r\n          </span>\r\n          </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}